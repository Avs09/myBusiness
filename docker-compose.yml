version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: mybusiness-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  backend:
    build:
      context: ./myBusiness-backend/myBusiness          
      dockerfile: Dockerfile
    image: proyecto-backend:latest
    container_name: mybusiness-backend
    environment:
      SPRING_PROFILES_ACTIVE: "${SPRING_PROFILES_ACTIVE}"
      SPRING_DATASOURCE_URL: "${SPRING_DATASOURCE_URL}"
      SPRING_DATASOURCE_USERNAME: "${SPRING_DATASOURCE_USERNAME}"
      SPRING_DATASOURCE_PASSWORD: "${SPRING_DATASOURCE_PASSWORD}"
      SPRING_JPA_OPEN_IN_VIEW: "${SPRING_JPA_OPEN_IN_VIEW}"

      # MAIL_HOST, MAIL_PORT, MAIL_USERNAME, MAIL_PASSWORD seg√∫n .env
      MAIL_HOST: ${MAIL_HOST}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
    ports:
      - "8080:8080"
    depends_on:
      - db
    # Healthcheck: requiere Actuator en Spring Boot
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      retries: 5

  frontend:
    build:
      context: ./myBusiness-frontend       
      dockerfile: Dockerfile
      args:
        VITE_API_URL: ${VITE_API_URL}
    image: proyecto-frontend:latest
    container_name: mybusiness-frontend
    environment:
      VITE_API_URL: ${VITE_API_URL}
    ports:
      - "3000:80"
    depends_on:
      - backend

volumes:
  db_data: